# https://docs.base.org/learn/llms.txt

## Learn Documentation

> Structured curriculum for building onchain: Ethereum fundamentals, Solidity, app development, tools, and token development.

## Building Onchain
- [Welcome](./welcome) — Program overview

## Onchain Concepts
- [Core Concepts](./onchain-concepts/core-concepts) — Definitions and mental models
- [Understanding the Onchain Tech Stack](./onchain-concepts/understanding-the-onchain-tech-stack) — Layers and components
- [Web2 vs Onchain (Wallets/Identity/Gas/Nodes/Frontend/Onramps/Social/AI)](./onchain-concepts/understanding-the-onchain-tech-stack) — Comparative guides
- [Development Flow](./onchain-concepts/development-flow) — From idea to production

## Introduction to Ethereum
- [Introduction](./introduction-to-ethereum/introduction-to-ethereum-vid) — Video overview
- [Developer Overview](./introduction-to-ethereum/ethereum-dev-overview-vid) — Video guide
- [Applications](./introduction-to-ethereum/ethereum-applications) — What’s possible
- [Gas Use](./introduction-to-ethereum/gas-use-in-eth-transactions) — Fees
- [EVM Diagram](./introduction-to-ethereum/evm-diagram) — Architecture
- [Guide to Base](./introduction-to-ethereum/guide-to-base) — Base specifics

## Onchain App Development
- [Frontend Setup](./onchain-app-development/frontend-setup/overview) — App stack overview
- [Writing to Contracts](./onchain-app-development/writing-to-contracts/useWriteContract) — Mutations
- [Reading & Displaying Data](./onchain-app-development/reading-and-displaying-data/useReadContract) — Queries
- [Account Abstraction](./onchain-app-development/account-abstraction/gasless-transactions-with-paymaster) — Gasless flows
- [Cross‑Chain Development](./onchain-app-development/cross-chain/bridge-tokens-with-layerzero) — Interop
- [Finance](./onchain-app-development/finance/access-real-time-asset-data-pyth-price-feeds) — Data and funding flows
- [Deploy with Fleek](./onchain-app-development/deploy-with-fleek) — Hosting

## Smart Contract Development
- [Intro to Solidity](./introduction-to-solidity/introduction-to-solidity-overview) — Fundamentals and Remix
- [Contracts & Basic Functions](./contracts-and-basic-functions/intro-to-contracts-vid) — Basics
- [Deploying to a Testnet](./deployment-to-testnet/overview-of-test-networks-vid) — Testnets and verification
- [Control Structures](./control-structures/standard-control-structures-vid) — Logic
- [Storage](./storage/simple-storage-video) — Layout
- [Arrays](./arrays/arrays-in-solidity-vid) — Patterns
- [Mappings](./mappings/mappings-vid) — Key/value storage
- [Advanced Functions](./advanced-functions/function-visibility-vid) — Modifiers and visibility
- [Structs](./structs/structs-vid) — Data modeling
- [Inheritance](./inheritance/inheritance-vid) — Composition
- [Imports](./imports/imports-vid) — Reuse
- [Errors](./error-triage/error-triage-vid) — Debugging
- [The new Keyword](./new-keyword/creating-a-new-contract-vid) — Deploying new contracts
- [Interfaces](./interfaces/intro-to-interfaces-vid) — Contract calls
- [Events](./events/hardhat-events-sbs) — Logging
- [Address & Payable](./address-and-payable/address-and-payable) — Transfers

## Development with Foundry
- [Deploy with Foundry](./foundry/deploy-with-foundry) — Setup and deploy
- [Setup with Base](./foundry/setup-with-base) — Base specifics
- [Testing Smart Contracts](./foundry/testing-smart-contracts) — Test flows
- [Verify Contract with Basescan](./foundry/verify-contract-with-basescan) — Verification
- [Random Numbers](./foundry/generate-random-numbers-contracts) — Patterns

## Development with Hardhat
- [Setup & Overview](./hardhat/hardhat-setup-overview/hardhat-setup-overview-sbs) — Project setup
- [Testing with TypeScript](./hardhat/hardhat-testing/testing-overview-vid) — Tests
- [Etherscan](./hardhat/etherscan/etherscan-sbs) — Verification
- [Hardhat Deploy](./hardhat/hardhat-deploy/hardhat-deploy-sbs) — Deployments
- [Verifying Contracts](./hardhat/hardhat-verify/hardhat-verify-vid) — Verify
- [Mainnet Forking](./hardhat/hardhat-forking/mainnet-forking-vid) — Forking
- [Tools & Testing](./hardhat/hardhat-tools-and-testing/overview) — Debug, coverage, gas, size

## Token Development
- [Intro to Tokens](./token-development/intro-to-tokens/tokens-overview) — Token types
- [Minimal Tokens](./token-development/minimal-tokens/minimal-token-sbs) — Minimal ERCs
- [ERC‑20 Tokens](./token-development/erc-20-token/erc-20-standard) — Fungible tokens
- [ERC‑721 Tokens](./token-development/erc-721-token/erc-721-standard) — NFTs
- [NFT Guides](./token-development/nft-guides/signature-mint) — Minting and dynamic NFTs

## Optional
- [Exercise Contracts](./exercise-contracts) — Practice repo

